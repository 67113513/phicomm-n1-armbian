# By PuXiongfei

name: Build Armbian

on:
  workflow_dispatch:
    inputs:
      boards:
        description: "BOARD"
        required: true
        default: "phicomm-n1"
      branch:
        description: "BRANCH"
        required: true
        default: "current"
      release:
        description: "RELEASE"
        required: true
        default: "bullseye"
      kernelOnly:
        description: "KERNEL_ONLY"
        required: true
        default: "no"
      buildDesktop:
        description: "BUILD_DESKTOP"
        required: true
        default: "no"
      desktopEnvironment:
        description: "DESKTOP_ENVIRONMENT"
        required: true
        default: "xfce"
      desktopEnvironmentConfig:
        description: "DESKTOP_ENVIRONMENT_CONFIG_NAME"
        required: true
        default: "config_base"
      appgroups:
        description: "DESKTOP_APPGROUPS_SELECTED"
        required: true
        default: "3dsupport,browsers,chat,desktop_tools,editors,email,internet,multimedia,office,programming,remote_desktop"
      uploadCowtransfer:
        description: "upload cowtransfer"
        required: true
        default: "false"
      uploadWetransfer:
        description: "upload wetransfer"
        required: true
        default: "false"

env:
  TZ: Asia/Shanghai

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Maximize build space
        uses: easimon/maximize-build-space@master
        with:
          root-reserve-mb: 4096
          temp-reserve-mb: 4096
          remove-dotnet: "true"
          remove-android: "true"
          remove-haskell: "true"

      - name: Initialization environment
        run: |
          echo "Free space:"
          df -hT
          sudo timedatectl set-timezone "$TZ"

      - name: Checkout self
        uses: actions/checkout@v2

      - name: Checkout Armbian build script
        uses: actions/checkout@v2
        with:
          path: build
          repository: armbian/build
          ref: master

      - name: Override file
        run: |
          [[ -d override ]] && echo "Copy override files..." && cp -af override/* build/
          echo "FILE_DATE=$(date +"%Y%m%d%H%M")" >> $GITHUB_ENV

      - name: Build Armbian
        id: build
        run: |
          cd build
          COMPILE_PARAMS="BOARD=\"${{ github.event.inputs.boards }}\" \
          BRANCH=\"${{ github.event.inputs.branch }}\" \
          RELEASE=\"${{ github.event.inputs.release }}\" \
          KERNEL_ONLY=\"${{ github.event.inputs.kernelOnly }}\" \
          KERNEL_CONFIGURE=\"no\" \
          BUILD_MINIMAL=\"no\" \
          BUILD_DESKTOP=\"${{ github.event.inputs.buildDesktop }}\" \
          COMPRESS_OUTPUTIMAGE=\"yes\""
          if [ "${{ github.event.inputs.buildDesktop }}" == "yes" ]; then
            COMPILE_PARAMS=$(echo ${COMPILE_PARAMS} | sed 's/RELEASE=${{ github.event.inputs.release }}/RELEASE=\"focal\"/g')
            [ -n "${{ github.event.inputs.desktopEnvironment }}" ] && COMPILE_PARAMS+=" DESKTOP_ENVIRONMENT=\"${{ github.event.inputs.desktopEnvironment }}\""
            [ -n "${{ github.event.inputs.desktopEnvironmentConfig }}" ] && COMPILE_PARAMS+=" DESKTOP_ENVIRONMENT_CONFIG_NAME=\"${{ github.event.inputs.desktopEnvironmentConfig }}\""
            [ -n "${{ github.event.inputs.appgroups }}" ] && COMPILE_PARAMS+=" DESKTOP_APPGROUPS_SELECTED=\"${{ github.event.inputs.appgroups }}\""
          fi
          echo "compile params: ${COMPILE_PARAMS}"
          sudo ./compile.sh ${COMPILE_PARAMS}
          echo "::set-output name=status::success"

      - name: Organize files
        id: organize
        run: |
          mkdir -p ${FILE_DATE}
          cd ${FILE_DATE}
          echo "UPLOAD_PATH=${PWD}" >> $GITHUB_ENV
          [[ -d ${GITHUB_WORKSPACE}/build/output/images ]] && sudo mv -f ${GITHUB_WORKSPACE}/build/output/images ./
          [[ -d ${GITHUB_WORKSPACE}/build/output/debug ]] && sudo mv -f ${GITHUB_WORKSPACE}/build/output/debug ./
          echo "::set-output name=status::success"

      - name: Upload output
        uses: actions/upload-artifact@main
        if: steps.build.outputs.status == 'success'
        with:
          name: Armbian_${{ github.event.inputs.boards }}_${{ github.event.inputs.release }}_${{ env.FILE_DATE }}
          path: ${{ env.UPLOAD_PATH }}

      - name: Upload to cowtransfer
        id: cowtransfer
        if: steps.organize.outputs.status == 'success' && github.event.inputs.uploadCowtransfer == 'true' && !cancelled()
        run: |
          curl -fsSL git.io/file-transfer | sh ./transfer cow --block 2621440 -s -p 64 --no-progress ${UPLOAD_PATH} 2>&1 | tee cowtransfer.log
          echo "::warning file=cowtransfer.com::$(cat cowtransfer.log | grep https)"
          echo "::set-output name=url::$(cat cowtransfer.log | grep https | cut -f3 -d" ")"

      - name: Upload to WeTransfer
        id: wetransfer
        if: steps.organize.outputs.status == 'success' && github.event.inputs.uploadWetransfer == 'true' && !cancelled()
        run: |
          curl -fsSL git.io/file-transfer | sh ./transfer wet -s -p 16 --no-progress ${UPLOAD_PATH} 2>&1 | tee wetransfer.log
          echo "::warning file=wetransfer.com::$(cat wetransfer.log | grep https)"
          echo "::set-output name=url::$(cat wetransfer.log | grep https | cut -f3 -d" ")"

      - name: Delete workflow runs
        uses: Mattraks/delete-workflow-runs@main
        with:
          retain_days: 1
          keep_minimum_runs: 2

# By PuXiongfei

name: Build Armbian

on:
  workflow_dispatch:
    inputs:
      boards:
        description: "BOARD"
        required: true
        default: "phicomm-n1"
      branch:
        description: "BRANCH"
        required: true
        default: "current"
      release:
        description: "RELEASE"
        required: true
        default: "bullseye"
      buildMinimal:
        description: "BUILD_MINIMAL"
        required: true
        default: "no"
      buildDesktop:
        description: "BUILD_DESKTOP"
        required: true
        default: "no"
      buildOptions:
        description: "Build Options"
        required: false
        default: ""
      override:
        description: "override files"
        required: true
        default: "yes"
      exclude:
        description: "exclude files"
        required: false

env:
  TZ: Asia/Shanghai

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Maximize build space
        uses: easimon/maximize-build-space@master
        with:
          root-reserve-mb: 10240
          remove-dotnet: "true"
          remove-android: "true"
          remove-haskell: "true"

      - name: Initialization environment
        run: |
          echo "Free space:"
          df -hT
          sudo timedatectl set-timezone "$TZ"

      - name: Checkout self
        uses: actions/checkout@v2

      - name: Checkout Armbian build script
        uses: actions/checkout@v2
        with:
          path: build
          repository: armbian/build
          ref: master

      - name: Override file
        run: |
          echo "$(date +"%Y.%m.%d")-PuXiongfei" > build/VERSION
          if [[ "${{ github.event.inputs.override }}" == "yes" && -d override ]]; then
            mkdir -p override/userpatches/u-boot/u-boot-meson64
            wget -O override/userpatches/u-boot/u-boot-meson64/zzz-phicomm-n1-u-boot.patch https://raw.githubusercontent.com/PuXiongfei/phicomm-n1-u-boot/main/patch/phicomm-n1-u-boot.patch
            echo "Copy override files..."
            cp -af override/* build/
          fi
          if [[ -n "${{ github.event.inputs.exclude }}" ]]; then
            for file in $(echo ${{ github.event.inputs.exclude }} | sed 's/,/ /g')
            do
              echo "find exclude file: $file"
              filePath=$(find build/ -name "$file")
              if [[ -n "$filePath" ]]; then
                echo "delete file: $filePath"
                rm -rf $filePath;
              fi
            done
          fi
          if [[ "${{ github.event.inputs.buildDesktop }}" == "yes" ]]; then
            cat >> build/config/boards/phicomm-n1.conf <<EOF
            DESKTOP_ENVIRONMENT="gnome"
            DESKTOP_ENVIRONMENT_CONFIG_NAME="config_base"
            DESKTOP_APPGROUPS_SELECTED="3dsupport office remote_desktop"
            EOF
            cat build/config/boards/phicomm-n1.conf
          fi
          echo "git diff meson64_common.inc meson64.conf start"
          git diff build/config/sources/families/include/meson64_common.inc build/userpatches/sources/families/meson64.conf
          echo "git diff meson64_common.inc meson64.conf end"
          echo "git diff boot-meson64.cmd boot-phicomm-n1.cmd start"
          git diff build/config/bootscripts/boot-meson64.cmd build/userpatches/bootscripts/boot-phicomm-n1.cmd
          echo "git diff boot-meson64.cmd boot-phicomm-n1.cmd end"
          echo "FILE_DATE=$(date +"%Y%m%d%H%M")" >> $GITHUB_ENV

      - name: Compile Armbian
        id: compile
        run: |
          cd build
          COMPILE_PARAMS="BOARD=${{ github.event.inputs.boards }} \
          BRANCH=${{ github.event.inputs.branch }} \
          RELEASE=${{ github.event.inputs.release }} \
          KERNEL_ONLY=no \
          KERNEL_CONFIGURE=no \
          BUILD_MINIMAL=${{ github.event.inputs.buildMinimal }} \
          BUILD_DESKTOP=${{ github.event.inputs.buildDesktop }} \
          EXPERT=yes \
          COMPRESS_OUTPUTIMAGE=yes"
          if [[ -n "${{ github.event.inputs.buildOptions }}" ]]; then
            COMPILE_PARAMS="${COMPILE_PARAMS} ${{ github.event.inputs.buildOptions }}"
          fi
          echo "compile params: ${COMPILE_PARAMS}"
          sudo ./compile.sh ${COMPILE_PARAMS}
          echo "::set-output name=status::success"

      - name: Organize files
        id: organize
        if: ${{ steps.compile.outputs.status == 'success' && !cancelled() }}
        run: |
          mkdir -p ${FILE_DATE}
          cd ${FILE_DATE}
          echo "UPLOAD_PATH=${PWD}" >> $GITHUB_ENV
          [[ -d ${GITHUB_WORKSPACE}/build/output ]] && sudo mv -f ${GITHUB_WORKSPACE}/build/output ./
          echo "::set-output name=status::success"

      - name: Upload output
        uses: actions/upload-artifact@v2
        if: ${{ steps.organize.outputs.status == 'success' && !cancelled() }}
        with:
          name: Armbian_${{ github.event.inputs.boards }}_${{ github.event.inputs.release }}_${{ env.FILE_DATE }}
          path: ${{ env.UPLOAD_PATH }}

      - name: Delete workflow runs
        uses: Mattraks/delete-workflow-runs@v2
        with:
          retain_days: 0
          keep_minimum_runs: 1

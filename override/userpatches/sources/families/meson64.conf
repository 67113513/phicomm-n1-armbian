UBOOT_TARGET_MAP=";;$SRC/packages/blobs/phicomm-n1/u-boot.bin:u-boot.bin"
BOOTSCRIPT="boot-meson64.cmd:boot.cmd"
BOOTENV_FILE='meson.txt'
LINUXFAMILY=meson64
ARCH=arm64
SERIALCON=ttyAML0
SRC_LOADADDR='LOADADDR=0x1080000'
BOOTBRANCH="tag:v2021.07"
OVERLAY_PREFIX='meson'

# this family does not need it
ATF_COMPILE="no"

# Set CPUMIN et al if not already set in the board config.
CPUMIN=${CPUMIN:-500000}
CPUMAX=${CPUMAX:-1536000}
GOVERNOR=${GOVERNOR:-ondemand}

case $BRANCH in
	current)
		KERNELBRANCH='branch:linux-5.10.y'
		KERNELPATCHDIR='meson64-current'
	;;
	edge)
		KERNELBRANCH='branch:linux-5.15.y'
		KERNELPATCHDIR='meson64-edge'
	;;
esac

if [ "$(uname -m)" = "aarch64" ]; then
	if [[ "$(lsb_release -sc)" == "focal" || "$(lsb_release -sc)" == "hirsute" || "$(lsb_release -sc)" == "impish" ]]; then
		PKG_PREFIX="qemu-x86_64-static -L /usr/x86_64-linux-gnu "
	else
		PKG_PREFIX="qemu-x86_64 "
	fi
else
	PKG_PREFIX=""
fi

write_uboot_platform()
{
	dd if=$1/u-boot.bin of=$2 bs=1 count=442 conv=fsync > /dev/null 2>&1
	dd if=$1/u-boot.bin of=$2 bs=512 skip=1 seek=1 conv=fsync > /dev/null 2>&1
}

family_tweaks_bsp()
{
	mkdir -p $destination/etc/udev/rules.d
	mkdir -p $destination/usr/local/bin
	cp $SRC/packages/bsp/rockchip/hdmi.rules $destination/etc/udev/rules.d
	install -m 755 $SRC/packages/bsp/rockchip/hdmi-hotplug $destination/usr/local/bin

	mkdir -p "$destination"/etc/X11/xorg.conf.d
	case "${BOARD}" in
		"phicomm-n1" )
	cat <<-EOF > "$destination"/etc/X11/xorg.conf.d/02-driver.conf
	Section "OutputClass"
	    Identifier "Amlogic"
	    MatchDriver "meson"
	    Driver "modesetting"
	    Option "PrimaryGPU" "true"
	EndSection
	Section "Screen"
	    Identifier      "Default Screen"
	    Device          "Meson"
	    Monitor         "foo"
	    DefaultDepth  24
	    SubSection "Display"
	       Depth    24
	       Modes    "1920x1080" "1440x900" "1280x720" "1280x1024" "1280x960" "1024x768" "800x600" "640x480" "720x400"
	    EndSubSection
	EndSection
	EOF
        ;;
		"phicomm-n1" )
	cat <<-EOF > "$destination"/etc/X11/xorg.conf
	Section "Device"
	    Identifier  "DRM Graphics Acclerated"
	    
	    ## Use modesetting and glamor
	        Driver      "modesetting"
	        Option      "AccelMethod"    "glamor"     ### "glamor" to enable 3D acceleration, "none" to disable.
	        Option      "DRI"            "2"
	        Option      "Dri2Vsync"      "true"
	        Option      "TripleBuffer"   "True"
	    ## End glamor configuration
	    
	    EndSection
       
	    Section "Screen"
	        Identifier "Default Screen"
	            SubSection "Display"
	                Depth 24
	            EndSubSection
	        EndSection
	EOF
        ;;
        esac
}

family_tweaks()
{
	if [[ $BOARD == phicomm-n1 ]]; then
		mkimage -C none -A arm -T script -d $SRC/config/bootscripts/phicomm-n1/boot-aml_autoscript.cmd $SDCARD/boot/aml_autoscript
		mkimage -C none -A arm -T script -d $SRC/config/bootscripts/phicomm-n1/boot-mainline.cmd $SDCARD/boot/emmc_autoscript
		mkimage -C none -A arm -T script -d $SRC/config/bootscripts/phicomm-n1/boot-mainline.cmd $SDCARD/boot/s905_autoscript
		mkimage -C none -A arm -T script -d $SRC/config/bootscripts/phicomm-n1/boot-phicomm-n1.cmd $SDCARD/boot/boot.scr

		install -m 755 $SRC/packages/blobs/phicomm-n1/ddbr $SDCARD/usr/bin/
		install -m 755 $SRC/packages/blobs/phicomm-n1/fixwlanmac.sh $SDCARD/root/fixwlanmac.sh
		install -m 755 $SRC/packages/blobs/phicomm-n1/install-to-emmc.sh $SDCARD/root/install-to-emmc.sh

		install -m 664 $SRC/packages/blobs/phicomm-n1/BCM4345C0.hcd $SDCARD/usr/lib/firmware/
		install -m 664 $SRC/packages/blobs/phicomm-n1/BCM4345C0.hcd $SDCARD/usr/lib/firmware/brcm/
		install -m 664 $SRC/packages/blobs/phicomm-n1/brcmfmac43455-sdio.bin $SDCARD/usr/lib/firmware/brcm/
		install -m 664 $SRC/packages/blobs/phicomm-n1/brcmfmac43455-sdio.clm_blob $SDCARD/usr/lib/firmware/brcm/
		install -m 664 $SRC/packages/blobs/phicomm-n1/brcmfmac43455-sdio.txt $SDCARD/usr/lib/firmware/brcm/

		cp $SRC/packages/blobs/phicomm-n1/u-boot.bin $SDCARD/boot/u-boot.bin
		cp $SRC/packages/blobs/phicomm-n1/regulatory.db $SDCARD/usr/lib/firmware/regulatory.db-debian
		cp $SRC/packages/blobs/phicomm-n1/regulatory.db.p7s $SDCARD/usr/lib/firmware/regulatory.db.p7s-debian
	fi
}
